import decimal


if __name__ == '__main__':
    '''
    1.73205080756887723              = 2.999999999999999652374485392   
    1.732050807568877293             = 2.999999999999999998172872276491007849
    1.7320508075688772935            = 2.99999999999999999990492308405988514225
    1.73205080756887729352           = 2.9999999999999999999742051163626402339904
    1.732050807568877293527          = 2.999999999999999999998453827668604516099729
    1.7320508075688772935274         = 2.99999999999999999999983946831465961793455076
    1.73205080756887729352744        = 2.9999999999999999999999780323792651281180329536
    1.732050807568877293527446       = 2.999999999999999999999998816988955954645555282916
    1.7320508075688772935274463      = 2.99999999999999999999999985621944049597193139938369
    1.73205080756887729352744634     = 2.999999999999999999999999994783505101482114881579395
    1.732050807568877293527446341    = 2.999999999999999999999999998247606716619869468634288281
    1.7320508075688772935274463415   = 2.99999999999999999999999999997965752418874676216173462225
    1.73205080756887729352744634150  = 2.9999999999999999999999999999796575241887467621617346222500
    1.732050807568877293527446341505 = 2.999999999999999999999999999996978032264435535097009085665025
    1.7320508075688772935274463415058 = 2.99999999999999999999999999999974931355654573876665299981143364
    1.73205080756887729352744634150587  = 2.9999999999999999999999999999999918006696053815877468422992444569
    1.732050807568877293527446341505872 = 2.999999999999999999999999999999998728872835657096920952084610480384
    1.7320508075688772935274463415058723 = 2.99999999999999999999999999999999976810332019842329706855241538390729
    1.73205080756887729352744634150587236694280525381038062 = 2.9999999999999999999999999999999999999999999999999999720938660312425626574060801058123500605875104692715844
    1.73205080756887729352744634150587236694280525381038062805580697945 = 2.9999999999999999999999999999999999999999999999999999999999999999933038330041372018890997341449945144871702758100626081553327223025
    1.73205080756887729352744634150587236694280525381038062805580697945193301690880 = 2.9999999999999999999999999999999999999999999999999999999999999999999999999999998715471416032950256155667605172463044909213243994251155448026897067075174400
    1.73205080756887729352744634150587236694280525381038062805580697945193301690880003 = 2.9999999999999999999999999999999999999999999999999999999999999999999999999999999754701900574276632272135410075986465074896396280479532281511084738234984545280009
    1.73205080756887729352744634150587236694280525381038062805580697945193301690880003708114618675 = 2.9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999748901972946152428377392353081239847824386119980037913036806297283461600482025231240658755625
    1.732050807568877293527446341505872366942805253810380628055806979451933016908800037081146186757248575 = 2.999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999997659562392293600654037885842366863501183280950825699871880507750784281933581636814003795304339530625
    
    from Wikipedia (https://en.wikipedia.org/wiki/Square_root_of_3)
    1.732050807568877293527446341505872366942805253810380628055806
    1.732050807568877293527446341505872366942805253810380628055806
    '''
    #decimal.getcontext().prec = 1000
    three = decimal.Decimal(3)
    representation = '1.73205080756887729352744634150587236694280525381038062805580697945193301690880003708114618675724857567562614141540670302996994509499895247881165551209437364852809323190230558'

    for next_digit in range(10):
        r = representation + str(next_digit)
        candidate = decimal.Decimal(r)
        candidate_result = candidate * candidate

        print(f'{r} = {candidate * candidate}')
