# Some code from somewhere on reddit
# I lost the reference

bits_with_breaks = '00110010  00101111 00110010 00100000 00101101 00100000 00110111 00101111  00110001  00100000 00101101 00100000 00110110 00101111 00110001  00100000 00101011  00100000 00110110 00101111 00110001 00100000 00101101  00100000 00111001  00101111 00110001 00100000 00101101 00100000  00110101 00101111 00110011  00100000 00101011 00100000 00110111 00101111  00110010 00100000 00101101  00100000 00110010 00101111 00110001  00100000 00101011 00100000 00110011  00101111 00110010 00100000 00101101  00100000 00110111 00101111 00110001  00100000 00101101 00100000  00110110 00101111 00110001 00100000 00101101  00100000 00110001 00110000  00101111 00110010 00100000 00101101 00100000  00110110 00101111  00110001 00100000 00101011 00100000 00110111 00101111  00110010 00100000  00101101 00100000 00110010 00101111 00110010 00100000  00101011  00100000 00110101 00101111 00110001 00100000 00101101 00100000  00110110  00101111 00110001 00100000 00101101 00100000 00110110 00101111   00110011 00100000 00101101 00100000 00110111 00101111 00110010 00100000   00101101 00100000 00111001 00101111 00110001 00100000 00101101 00100000   00110010 00101111 00110001 00100000 00101101 00100000 00101110'

if __name__ == '__main__':
    chunks = bits_with_breaks.split()

    for i, chunk in enumerate(chunks):
        if len(chunk) != 8:
            print(f'chunk 1: {chunk} is an unexpected length: ({len(chunk)}')

        byte = int(chunk, 2)
        char = chr(byte)
        print(f'{str(char)}')
        print(f'{i}: {chunk}: {byte}: {char}')

